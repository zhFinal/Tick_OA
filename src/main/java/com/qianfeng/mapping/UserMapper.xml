<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianfeng.dao.UserDao">
  <!--1645-->
  <resultMap id="BaseResultMap" type="com.qianfeng.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="headphoto" jdbcType="VARCHAR" property="headphoto" />
  </resultMap>
  <sql id="Base_Column_List">
    id, no, password, name, flag, headphoto
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qianfeng.entity.User">
    insert into t_user (id, no, password, 
      name, flag, headphoto
      )
    values (#{id,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}, #{headphoto,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qianfeng.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="headphoto != null">
        headphoto,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="headphoto != null">
        #{headphoto,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianfeng.entity.User">
    update t_user
    <set>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="headphoto != null">
        headphoto = #{headphoto,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianfeng.entity.User">
    update t_user
    set no = #{no,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      headphoto = #{headphoto,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findPwdByName" parameterType="string" resultType="string">
		select password from t_user where no=#{no}
	</select>

  <select id="findRoleByName" parameterType="string" resultType="string">
		select r.rname from t_user u
		inner join user_role ur
		on u.uid=ur.uid
		inner join role r
		on ur.rid=r.rid
		where u.no=#{uname}
	</select>

  <select id="findPermisionByName" parameterType="string" resultType="string">
		select distinct p.pdesc from t_user u
		inner join user_role ur
		on u.uid=ur.uid
		inner join role_permision rp
		on rp.rid=ur.rid
		inner join permision p
		on p.pid=rp.pid
		where u.no=#{uname}
	</select>

  <select id="findAllUser" resultType="com.qianfeng.vo.VUser">
    select u.id,u.no,u.name,r.info,u.flag
    from t_user u
    inner join t_role r
    on u.id = r.id
    limit #{index},#{limit}


  </select>

  <select id="selectByName" parameterType="string" resultType="com.qianfeng.entity.User">

    select * from t_user where name=#{name}
  </select>

  <select id="queryCount" resultType="java.lang.Integer">
    select count(*) from t_user
  </select>

  <delete id="deleteById" parameterType="int">
    delete from t_user where id=#{id}
  </delete>




  <select id="queryMenu" parameterType="int" resultType="com.qianfeng.vo.VMenu">
    select a.id,a.title,a.aurl,
    b.id,b.title,b.aurl
    from t_authority b
    inner join t_authority a
    on b.parentId = a.id
    inner join t_roleauthority ra
    on ra.aid = b.id
    inner join  t_user u
    on u.id = ra.rid
    where u.id = #{id}
  </select>



  <select id="findByCondition" resultType="com.qianfeng.vo.VUser">

    select u.id,u.no,u.name,r.info,u.flag
    from t_user u
    inner join t_role r
    on u.id = r.id
    <where>
      
      <if test="no != null">
        and no like '%${no}%'
      </if>
      <if test="flag = 1">
        and role = 1
      </if>
      <if test="flag = 2">
        and role = 2

      </if>
    </where>
  </select>

  <select id="queryCountByCondition" resultType="java.lang.Integer">

    select count(*) from t_user
    <where>

      <if test="no != null">
        and no like '%${no}%'
      </if>
      <if test="flag = 1">
        and role = 1
      </if>
      <if test="flag = 2">
        and role = 2

      </if>
    </where>
  </select>
</mapper>